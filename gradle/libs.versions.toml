# This file was generated by the Gradle 'init' task.
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
kotlin = "2.2.0-RC3"
kotlinx-json = "1.8.0"
cpg = "10.8.2"
spotless = "7.0.4"
ktor = "3.3.0"
jackson = "2.20.0"

[libraries]
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin"}
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin"}  # this is only needed for the testFixtures in cpg-core, everywhere else kotlin("test") is used
kotlin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version = "1.9.0" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version = "1.10.2" }

apache-commons-lang3 = { module = "org.apache.commons:commons-lang3", version = "3.17.0"}

jackson-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson"}
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }

kover-gradle = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version = "0.9.0" }
dokka-gradle = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version = "2.0.0" } # the dokka plugin is slightly behind the main Kotlin release cycle


cpg-core = { module = "de.fraunhofer.aisec:cpg-core", version.ref = "cpg" }
cpg-neo4j = { module = "de.fraunhofer.aisec:cpg-neo4j", version.ref = "cpg" }
cpg-python = { module = "de.fraunhofer.aisec:cpg-language-python", version.ref = "cpg" }
cpg-java = { module = "de.fraunhofer.aisec:cpg-language-java", version.ref = "cpg" }
cpg-cxx = { module = "de.fraunhofer.aisec:cpg-language-cxx", version.ref = "cpg" }
cpg-go = { module = "de.fraunhofer.aisec:cpg-language-go", version.ref = "cpg" }
cpg-ruby = { module = "de.fraunhofer.aisec:cpg-language-ruby", version.ref = "cpg" }
cpg-typescript = { module = "de.fraunhofer.aisec:cpg-language-typescript", version.ref = "cpg" }
cpg-ini = { module = "de.fraunhofer.aisec:cpg-language-ini", version.ref = "cpg" }
cpg-analysis = { module = "de.fraunhofer.aisec:cpg-analysis", version.ref = "cpg" }
cpg-concepts = { module = "de.fraunhofer.aisec:cpg-concepts", version.ref = "cpg" }
codyze = { module = "de.fraunhofer.aisec:codyze", version.ref = "cpg" }
codyze-compliance = { module = "de.fraunhofer.aisec:codyze-compliance", version.ref = "cpg" }
codyze-console = { module = "de.fraunhofer.aisec:codyze-console", version.ref = "cpg" }
# Note: This "module" intentionally looks very weird, because the CDT version is actually part of the path of the CDT external
# repository. In order to avoid updating the repository URL everytime a new CDT version comes out, we need to do this weird hack.
eclipse-cdt-core = { module = "11.5/cdt-11.5.0/plugins/org.eclipse.cdt:core", version = "8.4.0.202402110645"}

# TODO: this may break, if version used by`cpg-language-python` and here diverge; can we infer the version?
jep = { module = "black.ninia:jep", version = "4.2.0" }

ktor-client-java = {module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-core = {module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = {module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-jackson = {module = "io.ktor:ktor-client-jackson", version.ref = "ktor" }
ktor-serialization-jackson = {module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }

[bundles]
cpg = [
    "cpg-core",
    "cpg-concepts",
    "cpg-analysis",
    "cpg-python",
    "cpg-java",
    "cpg-cxx",
    "cpg-go",
    "cpg-ruby",
    "cpg-typescript",
    "cpg-ini",
    "cpg-neo4j",
    "cpg-concepts",
    "codyze",
    "codyze-compliance",
    "codyze-console",
    "cpg-concepts"
]

ktor = [
    "ktor-client-java",
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-jackson",
    "ktor-serialization-jackson"
]

jackson = [
    "jackson-module",
    "jackson-jsr310"
]


[plugins]
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin"}
dokka = { id = "org.jetbrains.dokka", version.ref = "kotlin" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
