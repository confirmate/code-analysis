import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.2/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    id("org.openapi.generator") version "7.9.0"
    kotlin("plugin.serialization") version "2.0.21"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        setUrl("https://jitpack.io")
    }
}

dependencies {
    val cpgVersion = "main-SNAPSHOT"

    // if you only want to use some of the cpg modules
    // use the 'cpg-core' module
    // and then add the needed extra modules, such as Go and Python
    implementation("com.github.Fraunhofer-AISEC.cpg", "cpg-core", cpgVersion)
    implementation("com.github.Fraunhofer-AISEC.cpg", "cpg-language-python", cpgVersion)

    // Use the Kotlin JUnit 5 integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit5")

    // Use the JUnit 5 integration.
    testImplementation(libs.junit.jupiter.engine)

    testRuntimeOnly("org.junit.platform:junit-platform-launcher")

    // This dependency is used by the application.
    implementation(libs.guava)

    val ktor = "2.3.12"

    implementation("io.ktor:ktor-client-java:${ktor}")
    implementation("io.ktor:ktor-client-core:${ktor}")
    implementation("io.ktor:ktor-client-auth:${ktor}")
    implementation("io.ktor:ktor-client-content-negotiation-jvm:${ktor}")
    implementation("io.ktor:ktor-utils:${ktor}")
    implementation("io.ktor:ktor-serialization-jackson-jvm:${ktor}")
    implementation("io.ktor:ktor-serialization-kotlinx-json:${ktor}")
    implementation("com.fasterxml.jackson.module:jackson-modules-java8:2.18.0")

    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.6.1")

    implementation("com.azure:azure-ai-openai:1.0.0-beta.11")
}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}

tasks.named<Test>("test") {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

val apiDescription = "${project.projectDir}/src/main/resources/openapi"
val apiRootName = "io.clouditor"

openApiGenerate {
    generatorName.set("kotlin")
    inputSpecRootDirectory.set(apiDescription)
    outputDir.set("${project.projectDir}/build/generated-sources")
    apiPackage.set("$apiRootName.api")
    invokerPackage.set("$apiRootName.invoker")
    modelPackage.set("$apiRootName.model")
    library.set("jvm-ktor")
    configOptions.set(mapOf(
        //"dateLibrary" to "kotlinx-datetime",
        //"serializationLibrary" to "kotlinx_serialization"
        "serializationLibrary" to "jackson"
    ))
}

sourceSets.main {
    kotlin.srcDirs("${project.projectDir}/build/generated-sources/src/main/kotlin")
}

tasks.withType<KotlinCompile>().configureEach {
    dependsOn("openApiGenerate")
}

